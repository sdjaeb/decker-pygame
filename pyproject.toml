[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "decker-pygame"
version = "0.7.0"
description = "A modern Python port of the classic 2001 Cyberspace RPG, Decker."
authors = [
    { name = "Stephen Jaeb", email = "sdjaeb@gmail.com" },
    { name = "Gemini Code Assist" },
]
requires-python = ">=3.13" # Corresponds to LGPL v2.1
license = "LGPL-2.1-only"
license-files = ["LICENSE"]
dependencies = [
    "pydantic>=2.0",
    "pydantic-settings>=2.0.0",
    "pygame-ce>=2.5.0",
]

[project.scripts]
decker = "decker_pygame.presentation.main:main"

[project.optional-dependencies]
dev = [
    "commitizen",
    "mypy",
    "numpy",
    "pre-commit",
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "pydoclint==0.6.6", # For docstring content validation
    "ruff==0.12.3",      # For code style and formatting
]

[project.urls]
"Homepage" = "https://github.com/sdjaeb/decker-pygame"

[tool.ruff]
line-length = 88
exclude = ["typings/"]

[tool.ruff.lint]
# Enable Pyflakes, pycodestyle, isort, bugbear, McCabe, and pydocstyle.
select = ["E", "W", "F", "I", "B", "C90", "UP", "D"]
# Disable UP045 to prevent rewriting Optional[T] to T | None, which can cause
# issues with older libraries or mocking frameworks like unittest.mock.
# UP007 (Optional[T] -> T | None) is also disabled for similar reasons.
# D107 Ignore missing docstrings in __init__
ignore = ["D107", "UP045", "UP007"]

[tool.ruff.lint.pydocstyle]
# Enforce Google-style docstrings for formatting and style.
convention = "google"

[tool.ruff.lint.per-file-ignores]
# It's common to not require docstrings for test files.
"tests/**/*.py" = ["D"]

[tool.pydoclint]
# Enforce Google-style docstring content validation.
style = "google"
exclude = "tests/.*"

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_provider = "pep621"

[tool.mypy]
python_version = "3.13"
mypy_path = ["src", "typings"]
strict = true
explicit_package_bases = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = "pygame.*"
ignore_missing_imports = true
ignore_errors = true
